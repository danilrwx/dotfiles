theme = "base16_transparent"

[editor]
bufferline = "multiple"
rulers = [80]
shell = ["/bin/zsh", "-c"]
line-number = "relative"
lsp.display-inlay-hints = false

[editor.file-picker]
hidden = false

[editor.soft-wrap]
enable = true

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[editor.indent-guides]
render = true
character = "â”‚"
skip-levels = 1

[keys.select]
X = ["extend_line_up", "extend_to_line_bounds"]

[keys.normal]
X = ["extend_line_up", "extend_to_line_bounds"]
H = "goto_previous_buffer"
L = "goto_next_buffer"

C-s = ":w"
esc = ["collapse_selection", "keep_primary_selection"]
C-g = ":sh tmux neww lazygit"
C-t = ":sh tmux neww"
C-f = [
  ":new",
  ":insert-output lf -print-selection",
  "split_selection_on_newline",
  "goto_file",
  "goto_last_modification",
  "goto_last_modified_file",
  ":buffer-close!",
  ":redraw",
]
A-f = ":format"
A-q = ":buffer-close"
A-j = ["extend_to_line_bounds", "delete_selection", "paste_after"]
A-k = [ "extend_to_line_bounds", "delete_selection", "move_line_up", "paste_before", ]

[keys.normal.tab]
l = ":sh tmux neww git log -p %{buffer_name}"
c = ":sh tmux neww git show $(git blame -L %{cursor_line},+1 %{buffer_name} | awk '{ print $1 }')"
b = ":sh tmux neww git blame -L %{cursor_line} %{buffer_name}"
g = [":new", ":insert-output lazygit", ":buffer-close!", ":redraw"]
e = [":sh rm -f /tmp/yazi-path", ":insert-output yazi %{buffer_name} --chooser-file=/tmp/yazi-path", ":open %sh{command cat /tmp/yazi-path}", ":redraw"]
p = [
  ":new",
  ":insert-output lf-pick",
  "select_all",
  "split_selection_on_newline",
  "goto_file",
  "goto_last_modified_file",
  ":buffer-close!",
  ":redraw",
]
